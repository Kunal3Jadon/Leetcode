/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void kth(TreeNode *root, int k, vector<int> &c, int &ans)
{
    if (c.size() == k)
    {
        ans = c[c.size() - 1];
        return;
    }
    if (root == NULL)
        return;
    
    kth(root->left, k, c, ans);
    c.push_back(root->val);
    if (ans != -1)
        return;
    kth(root->right, k, c, ans);
    if (ans != -1)
        return;
}
    int kthSmallest(TreeNode* root, int k) {
        int ans = -1;
    vector<int> c;
    kth(root, k, c, ans);
    return ans;
    }
};
