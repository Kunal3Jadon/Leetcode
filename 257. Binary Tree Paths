/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void print(vector<string>& a,string s,TreeNode* root)
    {
        if(root==NULL)
            return;
        if(root->left==NULL && root->right==NULL)
        {
            s += to_string(root->val);
            a.push_back(s);
            return;
        }
        s += to_string(root->val);
        print(a, s + "->", root->left);
        print(a, s + "->", root->right);
    }
    vector<string> binaryTreePaths(TreeNode* root) {
      vector<string> a;
    string s = "";
    print(a, s, root);
    return a;   
    }
};
