/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void minimum(TreeNode* root,int& maxi,int& prev)
    {
       if (root == NULL)
        return;
        minimum(root->left, maxi, prev);
        if (prev == -1)
            prev = root->val;
        else
        {
            maxi = min(maxi, root->val - prev);
            prev = root->val;
        }
        minimum(root->right, maxi, prev);
    }
    int minDiffInBST(TreeNode* root) {
        int maxi=INT_MAX;
        int prev=-1;
        minimum(root, maxi, prev);
        return maxi;
    }
};
