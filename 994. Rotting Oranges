class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int r[4]={-1,0,1,0};
        int c[4]={0,1,0,-1};
        int cnt=0;
        queue<pair<int,int>> q;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                if(grid[i][j]==2)
                q.push({i,j});
            }
        }
        while(!q.empty())
        {
            int count=0;
            int n=q.size();
            for(int i=1;i<=n;i++)
            {
                int r1=q.front().first;
                int c1=q.front().second;
                // cout<<r1<<" "<<c1<<endl;
                q.pop();
                for(int i=0;i<4;i++)
                {
                    int nr=r1+r[i];
                    int nc=c1+c[i];
                    if(nr>=0 && nr<grid.size() && nc>=0 && nc<grid[0].size() && grid[nr][nc]==1)
                    {
                        count++;
                        grid[nr][nc]=2;
                        q.push({nr,nc});
                    }
                }
            }
            if(count==0)
            break;
            cnt++;
        }
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            if(grid[i][j]==1)
            return -1;
        }
        return cnt;
    }
};
