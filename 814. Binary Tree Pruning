/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void poultry(TreeNode*root,int& c)
    {
        if(root==NULL)
            return;
        if(root->val==1)
            c++;
        poultry(root->left, c);
        poultry(root->right, c);
    }
    void solve(TreeNode* root)
    {
        if(root==NULL)
            return;
        int c1 = 0, c2 = 0;
        poultry(root->left, c1);
        poultry(root->right, c2);
        if(c1==0)
            root->left = NULL;
        if(c2==0)
            root->right = NULL;
        solve(root->left);
        solve(root->right);
    }
    TreeNode* pruneTree(TreeNode* root) {
         solve(root);
         if(root->val==0 && root->left==0 && root->right==0)
         return NULL;
         return root;
    }
};
